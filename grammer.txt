program        → declaration* EOF ;

declaration    → varDecl
               | statement ;
varDecl        → "var" variable ( "," variable )* ";" ;
variable       → IDENTIFIER ( "=" expression)? ;

statement      → exprStmt
               | printStmt
               | block ;

block          → "{" declaration "}" ;
exprStmt       → expression ";" ;
printStmt      → "print" expression ";" ;


expression     → assignment ;
assignment     → IDENTIFIER "=" assignment | bitwise_or ;
bitwise_or     → bitwise_xor ( "|" bitwise_xor )* ;
bitwise_xor    → bitwise_and ( "^" bitwise_and )* ;
bitwise_and    → equality ( "&" equality )* ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → shift ( ( ">" | ">=" | "<" | "<=" ) shift )* ;
shift          → term ( ( ">>" | "<<" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → power ( ( "/" | "*" ) power )* ;
power          → unary ( "**" unary )* ;
unary          → ( "!" | "-" | "~" ) unary
               | primary ;
primary        → NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")" | IDENTIFIER ;
